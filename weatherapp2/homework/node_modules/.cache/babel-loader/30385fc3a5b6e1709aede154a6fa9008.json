{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ttige\\\\Desktop\\\\weatherapp2\\\\homework\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, NavLink, BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport Nav from \"../components/Nav.jsx\";\nimport Cards from \"../components/Cards.jsx\";\nimport About from \"../components/About.jsx\";\nimport Swal from 'sweetalert2';\nimport Ciudad from \"../components/Ciudad\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n  const date = new Date();\n  var hour = date.getHours();\n  useEffect(() => {\n    if (hour > 7 && hour < 19) {\n      document.body.classList.add('fondodia');\n    } else document.body.classList.add('fondonoche');\n  });\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n\n        for (var item of cities) {\n          if (ciudad.id === item.id) {\n            return Swal.fire(`${ciudad.name} city is already loaded`);\n          }\n        } // Se agrega en ciudades\n\n\n        setCities(oldCities => [...oldCities, ciudad]); // Si no se obtiene:\n      } else {\n        Swal.fire(\"City not found\");\n      }\n    });\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Nav, {\n        onSearch: onSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: () => /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/About\",\n      render: () => /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/Ciudad/:cityId\",\n      render: _ref => {\n        let {\n          match\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Ciudad, {\n          city: onFilter(match.params.cityId)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 32\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DiWQVw0ar2n3PLd56i1Tx+k2gPg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ttige/Desktop/weatherapp2/homework/src/containers/App.js"],"names":["React","useState","useEffect","Route","Switch","NavLink","BrowserRouter","Router","Nav","Cards","About","Swal","Ciudad","apiKey","App","cities","setCities","date","Date","hour","getHours","document","body","classList","add","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","item","fire","onFilter","ciudadId","parseInt","length","match","params","cityId"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, NavLink, BrowserRouter as Router } from 'react-router-dom';\nimport './App.css';\nimport Nav from \"../components/Nav.jsx\";\nimport Cards from \"../components/Cards.jsx\";\nimport About from \"../components/About.jsx\";\nimport Swal from 'sweetalert2';\nimport Ciudad from \"../components/Ciudad\";\n\nconst apiKey = \"4ae2636d8dfbdc3044bede63951a019b\";\n\nfunction App() {\n  const [cities, setCities] = useState([]);\n\n\n  const date = new Date();\n  var hour = date.getHours();\n  \n  useEffect(() => {\n    if (hour > 7 && hour < 19) {\n    document.body.classList.add('fondodia');\n    } else\n    document.body.classList.add('fondonoche');\n  });\n\n\n\n  function onClose(id) {\n    setCities((oldCities) => oldCities.filter((c) => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n\n    fetch(\n      `http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}&units=metric`\n    )\n      .then((r) => r.json())\n      .then((recurso) => {\n         \n        if (recurso.main !== undefined) {\n          const ciudad = {\n            min: Math.round(recurso.main.temp_min),\n            max: Math.round(recurso.main.temp_max),\n            img: recurso.weather[0].icon,\n            id: recurso.id,\n            wind: recurso.wind.speed,\n            temp: recurso.main.temp,\n            name: recurso.name,\n            weather: recurso.weather[0].main,\n            clouds: recurso.clouds.all,\n            latitud: recurso.coord.lat,\n            longitud: recurso.coord.lon,\n          };\n\n          for (var item of cities) {\n            if (ciudad.id === item.id) {\n              return Swal.fire(`${ciudad.name} city is already loaded`)\n            }\n          }\n          // Se agrega en ciudades\n          setCities(oldCities => [...oldCities, ciudad]);\n          // Si no se obtiene:\n        } else {\n          Swal.fire(\"City not found\");\n        }\n      \n      });\n  }\n\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter((c) => c.id === parseInt(ciudadId));\n    \n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  \n}\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" render={() => <Nav onSearch={onSearch} />} />\n      <Route\n        exact\n        path=\"/\"\n        render={() => <Cards cities={cities} onClose={onClose} />}\n      />\n\n      <Route exact path={\"/About\"} render={() => <About />} />\n\n      <Route\n        path={\"/Ciudad/:cityId\"}\n        render={({ match }) => <Ciudad city={onFilter(match.params.cityId)} />}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}